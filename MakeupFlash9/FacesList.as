package {	import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.display.Loader;	import Face;		import flash.display.Stage;	import flash.display.Sprite;	import flash.display.Shape;    import com.senocular.display.TransformTool;    import flash.text.TextField;	import flash.text.TextFormat;    import flash.text.StyleSheet;    import flash.display.BitmapData;		public class FacesList extends MovieClip{		private var xmlRequest:URLRequest;         private var xmlLoader:URLLoader; 				private var faces:Array;	// a list of items		private var faceNum:int;	// a bookmark		private var faces_mc:MovieClip;//the movieclip cover faces 的正列		private var faces_mask:MovieClip;				private var next_button:MovieClip;		private var prev_button:MovieClip;				private var faces_mc_targetX:int;				// TODO add in the movie clip for the transformation tool	    public var selected_mc:MovieClip;        public var defaultTool:TransformTool;				private var infoField:TextField;		private var titleField:TextField;				private const FACE_WIDTH:int = 80;		private const FACE_OFFSET:int = 0;// 起始點要設為0  不然會在print的時候沒算好				private var active:Boolean;			public function FacesList(xmlFile:String) 		{				       //-------------add faces-------------------			this.faces = new Array();			this.faces_mc = new MovieClip();			this.faces_mc.y=0;			addChild(this.faces_mc);			this.faceNum = 0;			trace(faceNum);					   //------add texts--------------		    this.titleField = new TextField();			addChild(this.titleField);			this.titleField.x=183;			this.titleField.y=511;			this.titleField.width=150;			this.titleField.height=50;									this.infoField = new TextField();			this.infoField.x=100;			this.infoField.y=550;			this.infoField.width=280;			this.infoField.height=60;			//this.infoField.border=true;			this.infoField.wordWrap = true;//換行            addChild(infoField);				       //-------------add button-------------------			this.next_button = new face_button();			this.prev_button = new face_button();			this.next_button.rotation = 180;						this.prev_button.x = 70;			this.prev_button.y = 340;			this.next_button.x = 403;			this.next_button.y = 341;						addChild(this.next_button);			addChild(this.prev_button);						this.prev_button.addEventListener(MouseEvent.CLICK,prevFace);			this.next_button.addEventListener(MouseEvent.CLICK,nextFace);						//-------------control update and animate face-------------------			addEventListener(Event.ENTER_FRAME,update); //  animate face						//-------------add load faces-------------------			this.xmlRequest = new URLRequest(xmlFile);			this.xmlLoader = new URLLoader(xmlRequest);			xmlLoader.addEventListener(Event.COMPLETE, xmlLoaderHandler);						//-------------faces location(before and after)-------------------			this.faces_mc.x = 0;			this.faces_mc_targetX = this.faces_mc.x;						//------------transfer tool			defaultTool= new TransformTool();            addChild(defaultTool);						this.addEventListener(MouseEvent.CLICK,selectFunction);						active = false;		}				public function enable()		{			trace('ENABLING');			active = true;		}				public function disable()		{			active = false;		}				public function addLayers(newImg:BitmapData)		{			// for the current face:			faces[faceNum].addLayers(newImg);		}		        //load xml        private function xmlLoaderHandler(event:Event):void		{			var imgData:XML = new XML(event.target.data);				var facelist:XMLList = imgData.makeup.inFace;				for (var i=0; i<facelist.length(); i++)			{				var f = new Face(facelist[i]);								f.x = i*FACE_WIDTH + FACE_OFFSET;				f.visible = false;								this.faces.push(f); // 把xml的資料放進faces這個array				this.faces_mc.addChild(f);//把xml的資料放進faces_mc這個movieclip							}						// run the change item function as part of our intialization process			this.updateFace(0);		}		        //----------- move face ------------------------------------  		private function prevFace(evt:MouseEvent)		{			this.updateFace(-1);			trace(faceNum);		}				private function nextFace(evt:MouseEvent)		{			this.updateFace(1);			trace(faceNum);		}				// a function to handle cycling through the list of items		private function updateFace(dir:int)		{						this.faces[this.faceNum].visible = false;	// turn off the previous item			this.faceNum += dir;						// change our bookmark						// make sure the bookmark number isn't out of bounds			if (this.faceNum > (this.faces.length - 1))			{				//this.faceNum = this.faces.length - 1;  //stop				this.faceNum = 0;                        //loop			}						if (this.faceNum < 0)			{ 				//this.faceNum = 0;                      // stop 				this.faceNum = this.faces.length - 1;    // loop go back to first			}						// do everything we need to do to activate the new item						this.faces_mc_targetX = this.faceNum * -FACE_WIDTH;						this.infoField.text = this.faces[this.faceNum].info_text;						var textFormat = new TextFormat();			textFormat.color =0x000000;			textFormat.size=11.5;			textFormat.leading=6;//下一行行寬			textFormat.letterSpacing=1;			//textFormat.leftMargin=10;//整段對左邊的空白數			//textFormat.indent=40;//2第一排得段落			infoField.setTextFormat(textFormat);						this.titleField.text = this.faces[this.faceNum].info_title;						var textFormatTitle = new TextFormat();			textFormatTitle.color =0x000000;			textFormatTitle.size=16.5;			textFormatTitle.letterSpacing=0;			titleField.setTextFormat(textFormatTitle);						this.faces[this.faceNum].visible = true;					}				private function update(evt:Event)		{			if (Math.abs(this.faces_mc.x - this.faces_mc_targetX) > 1)			{				// animate         //0.2 can slow down, if 1 will go there immidately				this.faces_mc.x += (this.faces_mc_targetX - this.faces_mc.x) * 0.2; 			}			else			{				this.faces_mc.x = this.faces_mc_targetX;			}		}				 //----------- select and transfer Funciton------------------------------------  		private function selectFunction(e:MouseEvent)		{			if (active == false) 			{				trace('returningn out of selectFunction');				return; 			}			 			trace('Clicked on: ' + e.target);			if (e.target.parent is Makeup  && e.target.parent.clickable) 			{				selected_mc = e.target.parent as MovieClip;				trace('clicked on Makeup');												selected_mc.parent.setChildIndex(selected_mc, 0);				defaultTool.target = e.target.parent as Sprite;							}			else			{				trace('clearing selection');				defaultTool.target = null;				selected_mc = null;			}				}			}	}